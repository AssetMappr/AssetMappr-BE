name: Deploy BE to EC2 - Development

on:
  push:
    branches:
      - 'release/dev/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deployment version
        run: |
          echo "Deploying version: ${{ github.sha }}"

      - name: Set Short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Deploy code to Amazon EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          SECRET_KEY: ${{ secrets.APP_SECRET_KEY  }}
          HOSTNAME : ${{ secrets.AWS_EC2_HOST  }}
          USER_NAME : ${{ secrets.AWS_EC2_USER  }}
          DB_NAME: ${{ vars.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PWD: ${{ secrets.DB_PWD }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DEBUG: ${{ vars.DEBUG }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            rm -rf backend
            mkdir backend
          '
          # Copy code to remote repo          
          scp -o StrictHostKeyChecking=no -i private_key -r ./* ${USER_NAME}@${HOSTNAME}:~/backend/.
          # Copy environment variables
          env | grep -E 'SECRET_KEY|DB_NAME|DB_USER|DB_PWD|DB_HOST|DB_PORT|DEBUG' > .env
          scp -o StrictHostKeyChecking=no -i private_key .env ${USER_NAME}@${HOSTNAME}:~/backend/deployment/.
          # Connect to your EC2 instance via SSH and run Docker commands          
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            sudo apt-get update
            curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh
            sudo usermod -aG docker $(whoami)
            newgrp docker
            sudo apt  install --yes docker-compose
            cd backend/deployment        
            chmod 555 dev-deploy.sh
            ./dev-deploy.sh
          '